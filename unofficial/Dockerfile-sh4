#
# Dockerfile
#

FROM polyarch/debian-ports:latest

WORKDIR /root

# Clean and update package lists
RUN apt-get clean && apt-get update && apt-get upgrade -y

RUN apt-get install -y --no-install-recommends libbfd-dev uthash-dev libelf-dev libcapstone-dev  libreadline-dev libiberty-dev libgsl-dev build-essential git debootstrap file nano xxd ca-certificates

# Build wcc & install it
RUN git clone https://github.com/endrazine/wcc.git && cd wcc && git checkout 5e7755d32906454f43dace8dcf850b70c4d7eaae && git submodule init && git submodule update 
COPY setup-sh4.sh /root/wcc/src/wsh/openlibm/
RUN cd  /root/wcc/src/wsh/openlibm/ && git checkout 3cfad148058a1dda6346821c9ca6b4c10d726543 && chmod +x ./setup-sh4.sh && ./setup-sh4.sh
COPY sh4.patch ./wcc/sh4.patch
RUN cd wcc && git apply sh4.patch && make -i && make install

RUN apt-get install -y libbpf1 libdbus-1-3 libdevmapper1.02.1 libestr0 libglib2.0-dev libkmod2 libmnl0 libnewt0.52 libpopt0 sudo libxtables12 libfastjson-dev

# Prepare wcc tests
RUN git clone https://github.com/endrazine/wcc-tests.git && cd wcc-tests && make -i

WORKDIR /root
RUN apt-get install -y apache2 nginx openssh-server
COPY apache_relink.tgz /root/apache_relink.tgz
RUN tar -xvzf apache_relink.tgz
COPY Makefile-alt /root/apache_relink/Makefile
RUN cd apache_relink && make -i

WORKDIR /root/wcc-tests


